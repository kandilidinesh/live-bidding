// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  firstName String
  lastName  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bids        Bid[]
  auctionsWon Auction[] @relation("AuctionWinner")
}

enum Role {
  USER
  ADMIN
  SELLER
}

model Auction {
  id                Int      @id @default(autoincrement())
  carId             String
  startTime         DateTime
  endTime           DateTime
  startingBid       Int
  currentHighestBid Int      @default(0)
  status            String // UPCOMING | LIVE | ENDED
  createdAt         DateTime @default(now())

  winnerId Int?
  winner   User? @relation("AuctionWinner", fields: [winnerId], references: [id])

  bids Bid[]
}

model Bid {
  id        Int      @id @default(autoincrement())
  amount    Int
  timestamp DateTime @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  auctionId Int
  auction   Auction @relation(fields: [auctionId], references: [id])
}
